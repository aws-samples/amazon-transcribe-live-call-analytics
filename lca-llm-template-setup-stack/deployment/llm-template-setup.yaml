AWSTemplateFormatVersion: "2010-09-09"

Description: Amazon Transcribe Live Call Analytics with Agent Assist - LLM Prompts

Transform: AWS::Serverless-2016-10-31

Resources:
  LLMPromptTemplateTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      KeySchema:
        - AttributeName: LLMPromptTemplateId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: LLMPromptTemplateId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  LLMPromptUploadRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: allow-s3-notification-config
          PolicyDocument:
            Statement:
              Effect: Allow
              Resource:
                - !GetAtt LLMPromptTemplateTable.Arn
              Action:
                - "dynamodb:PutItem"
                - "dynamodb:UpdateItem"
        - PolicyName: SSMGetParameterPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*

  LLMPromptUploadFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code: ../source/lambda_functions
      Handler: llm_prompt_upload.lambda_handler
      Role: !GetAtt LLMPromptUploadRole.Arn
      Runtime: python3.12
      MemorySize: 128
      Timeout: 60
      LoggingConfig:
        LogGroup:
          Fn::Sub: /${AWS::StackName}/lambda/LLMPromptUploadFunction
    DependsOn:
      - LLMPromptUploadFunctionLogGroup

  LLMPromptUploadFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /${AWS::StackName}/lambda/LLMPromptUploadFunction
      RetentionInDays:
        Ref: CloudWatchLogsExpirationInDays

  LLMStorePromptTemplates:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt LLMPromptUploadFunction.Arn
      LLMPromptTemplateTableName: !Ref LLMPromptTemplateTable
      # hash below is updated by publish.sh script- used to force tempate updates when source has changed.
      source_hash: 67962f11c6aae808

Outputs:
  LLMPromptTemplateTableName:
    Value: !Ref LLMPromptTemplateTable

Parameters:
  CloudWatchLogsExpirationInDays:
    Type: Number
    Default: 14
    Description: The number of days log events are kept in CloudWatch Logs.
